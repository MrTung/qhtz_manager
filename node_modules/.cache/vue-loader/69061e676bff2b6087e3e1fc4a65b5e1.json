{"remainingRequest":"/Users/dongxuwei/Desktop/系统相关/代码/advance-platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dongxuwei/Desktop/系统相关/代码/advance-platform/src/views/auth/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dongxuwei/Desktop/系统相关/代码/advance-platform/src/views/auth/index.vue","mtime":1565746967293},{"path":"/Users/dongxuwei/Desktop/系统相关/代码/advance-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dongxuwei/Desktop/系统相关/代码/advance-platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dongxuwei/Desktop/系统相关/代码/advance-platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dongxuwei/Desktop/系统相关/代码/advance-platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Qs from \"qs\";\nimport { getTimeDate } from \"@/utils/index.js\";\nimport UserInfo from \"./infoDialog\";\n\nexport default {\n  components: { UserInfo },\n\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        true: \"success\",\n        draft: \"gray\",\n        deleted: \"danger\"\n      };\n      return statusMap[status];\n    }\n  },\n  data() {\n    return {\n      dialogTableVisible: false,\n\n      selectTaskData: {},\n\n      list: null,\n      listLoading: true,\n      form: {\n        type: \"\",\n        id: \"\",\n        userId: \"\",\n        password: \"\",\n        userName: \"\",\n        phone: \"\"\n      },\n      rules: {\n        type: [{ required: true, trigger: \"blur\", message: \"请选择账号类型\" }],\n        userId: [{ required: true, trigger: \"blur\", message: \"请输入账号ID\" }],\n        userName: [\n          { required: true, trigger: \"blur\", message: \"请输入账号名称\" }\n        ],\n        password: [\n          { required: true, trigger: \"blur\", message: \"请输入账号密码\" }\n        ]\n      }\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    formatTime(row, column, cellValue) {\n      return getTimeDate(cellValue);\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let rols = [{ id: null, roleId: this.form.type, status: \"1\" }];\n          let param = {\n            base: JSON.stringify({\n              id: this.form.id,\n              userName: this.form.userName,\n              userId: this.form.userId,\n              password: this.form.password,\n              checkPassword: this.form.password,\n              wxNum: \"\",\n              mail: \"\",\n              phone: this.form.userId,\n              region: \"\"\n            }),\n            roles: JSON.stringify(rols)\n          };\n\n          this.axios\n            .post(this.urls.addadmin + \"?\" + Qs.stringify(param))\n            .then(response => {\n              this.$refs[formName].resetFields();\n              this.fetchData();\n            });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n\n    fetchData() {\n      this.listLoading = true;\n      this.axios.get(this.urls.getalladminlist).then(response => {\n        this.list = response.data;\n        this.listLoading = false;\n      });\n    },\n\n    deleteh(item) {\n      this.$confirm(\"是否确认删除?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        let param = {\n          id: item.id\n        };\n        this.axios\n          .delete(this.urls.delateadmin + \"?\" + Qs.stringify(param))\n          .then(response => {\n            this.fetchData();\n          });\n      });\n    },\n\n    //查询\n    lookinfo(row, index) {\n      this.dialogTableVisible = true;\n      this.selectTaskData = row;\n    },\n    editDialogListener(bol) {\n      this.dialogTableVisible = bol;\n    }\n  }\n};\n",null]}